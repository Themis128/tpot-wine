from reportlab.lib.pagesizes import A4
from reportlab.pdfgen import canvas
from reportlab.lib import colors
from reportlab.platypus import Table, TableStyle
import seaborn as sns
import matplotlib.pyplot as plt
import pandas as pd
from pathlib import Path

EXPORT_DIR = Path("exports")
EXPORT_DIR.mkdir(exist_ok=True)

def generate_wine_report(df: pd.DataFrame, target: str, report_name="wine_report.pdf"):
    corr = df.corr(numeric_only=True)[target].drop(target).sort_values(key=abs, ascending=False).head(10)
    top_feat = corr.index[0]
    regions = ", ".join(df["Region"].unique()) if "Region" in df.columns else "N/A"

    if "date" in df.columns:
        df["date"] = pd.to_datetime(df["date"], errors="coerce")
        date_range = f"{df['date'].min().date()} to {df['date'].max().date()}"
    else:
        date_range = "N/A"

    scatter_path = EXPORT_DIR / "scatter.png"
    box_path = EXPORT_DIR / "box.png"

    plt.figure(figsize=(6, 4))
    sns.scatterplot(data=df, x=top_feat, y=target, hue="Region")
    plt.title(f"{top_feat} vs {target}")
    plt.tight_layout()
    plt.savefig(scatter_path)
    plt.close()

    plt.figure(figsize=(6, 4))
    sns.boxplot(data=df, x="Region", y=top_feat)
    plt.xticks(rotation=45)
    plt.title(f"{top_feat} by Region")
    plt.tight_layout()
    plt.savefig(box_path)
    plt.close()

    pdf_path = EXPORT_DIR / report_name
    c = canvas.Canvas(str(pdf_path), pagesize=A4)
    width, height = A4

    c.setFont("Helvetica-Bold", 18)
    c.drawString(50, height - 50, "Wine Quality Insights Report")

    c.setFont("Helvetica", 12)
    c.drawString(50, height - 80, f"Regions: {regions}")
    c.drawString(50, height - 100, f"Date Range: {date_range}")
    c.drawString(50, height - 130, "Top Correlated Features with Wine Quality:")

    data = [["Feature", "Correlation"]]
    for idx, val in corr.items():
        data.append([idx, round(val, 3)])

    table = Table(data, colWidths=[200, 100])
    table.setStyle(TableStyle([
        ('BACKGROUND', (0, 0), (-1, 0), colors.whitesmoke),
        ('TEXTCOLOR', (0, 0), (-1, 0), colors.black),
        ('GRID', (0, 0), (-1, -1), 0.5, colors.grey),
        ('ALIGN', (1, 1), (-1, -1), 'CENTER'),
    ]))

    table.wrapOn(c, width, height)
    table.drawOn(c, 50, height - 300)

    c.drawImage(str(scatter_path), 50, height - 550, width=240, preserveAspectRatio=True, mask='auto')
    c.drawImage(str(box_path), 300, height - 550, width=240, preserveAspectRatio=True, mask='auto')

    c.setFont("Helvetica-Oblique", 10)
    c.drawString(50, 30, "Generated by Baltzakis Themistoklis â€” Streamlit App")

    c.save()
    return pdf_path
